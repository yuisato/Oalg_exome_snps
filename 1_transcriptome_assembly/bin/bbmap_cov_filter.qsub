#!/bin/bash
#$ -N bbmap
#$ -cwd
#$ -j y
#$ -pe smp 24
#$ -R y
#$ -S /bin/bash
#$ -q main.q@@intelhosts

assembly=$1 #results/05_trinity/Trinity.fasta
read1=$2    #results/05_trinity/trinity_in_pooled_R1.fa.gz.normalized_K25_C50_pctSD10000.fa
read2=$3    #results/05_trinity/trinity_in_pooled_R2.fa.gz.normalized_K25_C50_pctSD10000.fa
outdir=$4   #results/07_bbmap_cov_filter/

hostname
echo "job $JOB_ID started"
date
echo " "

#Ensure /scratch is not full.
dir="/scratch"   
reqSpace=10     #in GByte
availSpace=$(df -BG "${dir}" | awk 'NR==2 { print $4+0 }')
if (( availSpace < reqSpace )); then
  echo "not enough Space" >&2
  exit 1
fi

mkdir -p /scratch/tmp.$JOB_ID
cd /scratch/tmp.$JOB_ID
cp $assembly .
cp $read1 .
cp $read2 .
echo "files copied"
date
echo " "
echo "bbmap started"
echo " "
bbmap.sh\
 in=$(basename $read1) in2=$(basename $read2) ref=$(basename $assembly)\
 pairedonly=t scafstats=mapped_read_numbers.txt idhist=read_id.hist\
 covstats=coverage_per_contig.txt covhist=coverage_per_base.hist rpkm=rpkm_fpkm_per_contig.txt\
 unpigz pigz overwrite=t t=$NSLOTS
echo " "
echo "bbmap complete"
date
echo " "

echo "coverage filtering"
cat coverage_per_contig.txt | \
  perl bin/trinity_filter_by_coverage.pl > isoform.list
filterbyname.sh\
 in=$(basename $assembly)\
 out=candidate_isoforms.fasta\
 names=isoform.list include overwrite

echo " "
echo "moving result"
date
echo " "
rm $(basename $read1) $(basename $read2) $(basename $assembly)
rm -rf ref
cat bbmap.o${JOB_ID} > bbmap.stats
mkdir -p $outdir
mv * $outdir
rm -r /scratch/tmp.$JOB_ID/*

echo "job ID: $JOB_ID finished."
date